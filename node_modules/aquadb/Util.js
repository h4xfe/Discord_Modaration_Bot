const util = require("util");

module.exports.baseSet = (data, path, value) => {
    if (path.includes(".")) {
        let elements = path.split(".");
        let key = elements.pop();
        let obj = elements.reduce((a, b) => {
            if (typeof a[b] === "undefined") a[b] = {};
            if ((util.isObject(a[b]) === false)) a[b] = {};
            return a[b];
        }, data);

        obj[key] = value;
        return data;
    } else {
        data[path] = value;
        return data;
    }
};

module.exports.baseGet = (data, path) => {
    if (path.includes(".")) {
        let elements = path.split(".");
        let key = elements.pop();
        let obj = elements.reduce((a, b) => {
            if (typeof a[b] === "undefined") a[b] = {};
            return a[b];
        }, data);
        return obj[key];
    } else {
        return data[path];
    }
};

module.exports.baseDelete = (data, path) => {
    if (path.includes(".")) {
        let elements = path.split(".");
        let key = elements.pop();
        let obj = elements.reduce((a, b) => {
            if (typeof a[b] === "undefined") a[b] = {};
            return a[b];
        }, data);
        
        delete obj[key];
        return data;
    } else {
        delete data[path];
        return data;
    }
};

module.exports.isValidValue = (value) => {
    return ["string", "number", "undefined", "boolean"].includes(typeof value) || util.isObject(value) || Array.isArray(value);
};