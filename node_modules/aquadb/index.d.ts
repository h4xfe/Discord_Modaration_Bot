interface Options {
    "name": string;
    "autoFile": boolean;
    "ignoreWarns": boolean;
}

import EventEmitter from "eevents";
import JsonDB from "./adapters/JsonDB";
import YamlDB from "./adapters/YamlDB";
import BsonDB from "./adapters/BsonDB";

class AquaDB extends EventEmitter {
    constructor(adapter: JsonDB|YamlDB|BsonDB, options: Options);
    set(key: string, value: any): any;
    get(key: string): any;
    fetch(key: string): any;
    delete(key: string): true;
    has(key: string): boolean;
    update(key: string, func: (data: any) => any): any;
    add(key: string, value: number): number;
    subtract(key: string, value: number): number;
    subs(key: string, value: number): number;
    substract(key: string, value: number): number;
    push(key: string, ...value:any[]): any[];
    setByIndex(key: string, index: number, value: any): any[];
    setByValue(key: string, oldValue: any, newValue: any): any[];
    deleteByIndex(key: string, index: number): any[];
    deleteByValue(key: string, value: any): any[];
    all(): any;
    deleteAll(): true;
}

export = AquaDB;